/////////////.h
class Point
{
private:
    int m_num;
    vector <Trajet*> m_trajet;
    int m_altitude;
public:
    Point(int _num, int _altitude);
    ~Point

};
//////////.cpp
Point::Point(int _num,int _altitude)
    :m_num(_num),m_altitude(_altitude)
{
}
Point::~Point()
{
}


/////////////.h
class Lieu
{
private:
     std::string m_nom;
     std::vector<Point*> m_points;
public:
    Lieu(std::string _nom);
    ~Lieu();
};
//////////.cpp
Lieu::Lieu(std::string _nom)
    :m_nom(_nom);
{

}
Lieu::~Lieu()
{
}


/////////////.h
class Trajet
{
private:
    int m_depart;
    int m_arrive;
    int m_duree;
    std::string m_type;
public:
    Trajet(int _NumDep,int _NumAr, int _AltDep, int _AltAr, int _duree, std::string _type);
    ~Trajet();
};
//////////.cpp
Trajet::Trajet(int _numDep,int _AltDep,int _numAr, int _AltAr,int _duree,std::string _type)
    :m_duree(_duree),m_type(_type);
{
    m_depart = new Point(_numDep,_AltDep);
    m_arrive = new Point(_numAr, _AltAr);
}
Trajet::~Trajet()
{

}

/////////////.h
class Graphe
{
private:
    std::vector<Lieu*> m_lieux;
    int m_taille;
    int m_ordre;
    int m_orientation;
public:
    Graphe();//code minh bao;
    ~Graphe();
};
//////////.cpp
Graphe::Graphe()//Code minh Bao ouverture fichier
{

}
Graphe::~Graphe()
{

}
